C51 COMPILER V9.00   MAIN                                                                  06/29/2014 12:14:01 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\KEIL4c51\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /***************************************************************************/
   2          /****************************Project:   8051_PLC_TIME **********************/
   3          /****************************CopyLight: @ken *******************************/
   4          /****************************Verson: V1.0 **********************************/
   5          /****************************Date: 2014-06-28 ******************************/ 
   6          /*************** 增加了功能：检测插卡和拔卡延时判断功能 *********************/
   7          /***************************************************************************/
   8          
   9          #include <STC11.H>
  10          //#include "STC12C5052.h"
  11          
  12          
  13          #define KEY_FRAME_01                                         150u            //毫秒
  14          
  15          #define DELAY_TIME_MOTOR_L1                      12u                       //秒
  16          #define DELAY_TIME_MOTOR_L2                      12u                       //秒
  17          
  18          #define Key_BIL1 P02
  19          #define Key_BIL2 P03
  20          #define Key_B01  0
  21          #define Key_C01  1
  22          #define Key_AIL1 P00
  23          #define Key_AIL2 P01
  24          ///////////////////////////////以下define 用于定义插卡方式，请选择一种，屏蔽其他的//////////////////////
  25          #define Key_C02  P14           // 只用  CARD_MODE B
  26          //#define Key_C02        P15           // 只用 CARD_MODE A
  27          //#define Key_C02        (P15||P14)           // 同时使用 CARD_MODE A 和 CARD_MODE B
  28          //#define Key_C02    P25                                //只使用SW1，即板上的26、27端口
  29          //////////////////////////////////// end  ////////////////////////////////////////////////////////////////
             -/
  30          #define LED5   P40                                       
  31          #define LED6   P41
  32          
  33          #define Key_Frame_21              1u                   //检测确认插卡时间
  34          #define Key_Frame_22              6u                   //检测确认拔卡时间
  35          #define Key_Frame_23              20u                   //拔卡后留给客人操作的时间
  36          
  37          
  38          #define         AOL1                                    P20
  39          #define         AOL2                                    P21
  40          #define     BOL1                                        P22
  41          #define     BOL2                                        P23       
  42          
  43          #define         NOBODY_L2_DOWN                  1
  44          #define     NOBODY_L1_DOWN          0
  45          
  46          //int Key_Frame_21_time_flag=0;   //用于计算C02按键接触时间
  47          int Key_Frame_23_time_flag=0;   //用于计算C01按键接触时间
  48          //int Key_Frame_21_time=0;   //用于计算C02按键接触时间
  49          int Key_Frame_23_time=0;   //用于计算C01按键接触时间
  50          
  51          int Key_time_C02_On = 0;      //C02按制时间计数
  52          int Key_time_C02_Off = 0;      //C02按制时间计数
  53          
  54          int MOTOR_L1_Runtime = 0;         //AL1运行计时
C51 COMPILER V9.00   MAIN                                                                  06/29/2014 12:14:01 PAGE 2   

  55          int MOTOR_L1_Runtime_Offse = 0;   //用于记下从欢迎模式时拔卡后剩下AL1运行的时间
  56          
  57          /////////////////////////////////////////////////
  58          
  59          int cont = 0;                      //用于定时计数
  60          int delay_1ms = 0;                                 //用于计数延时1豪秒
  61          int delay_ms = 0;
  62          int delay_1s = 0;                                  //用于计数延时1秒
  63          int delay_1ms_for_100ms = 0; //用于计数延时100毫秒
  64          
  65          unsigned int L1_runtime = 0;       //运行计时
  66          unsigned int L2_runtime = 0;
  67          
  68          unsigned char key = 0;                     //用于返回按键值
  69          
  70          unsigned char flag_AOL1 = 0;               //用于标志按键之前是否已处于按下状态
  71          unsigned char flag_AOL2 = 0; 
  72          unsigned char flag_C01 = 0;
  73          unsigned char flag_BOL1 = 0;
  74          unsigned char flag_BOL2 = 0;
  75          unsigned char flag_C02 = 0;
  76          unsigned char welcome_flag = 0;
  77          
  78          unsigned char L1_delay_flag = 0;  //用于标志C02按下首次L1运行进入延时（即进入欢迎模式）
  79          /////////////////////////////////////延时函数/////////////////////////////////
  80          void delay(int time)
  81          {
  82   1      
  83   1              delay_1s = 0;
  84   1              do
  85   1              {
  86   2                      ;
  87   2              }
  88   1              while( delay_1s!=time );
  89   1      }
  90          void delayms(int time)
  91          {
  92   1              delay_ms = 0;
  93   1              do
  94   1              {
  95   2                      ;
  96   2              }
  97   1              while( delay_ms !=time );
  98   1      }
  99          ///////////////////////////////////马达停止///////////////////////////////////
 100          void Motor_Stop(void)                                     //停止马达运行
 101          {
 102   1              AOL1 = 0;
 103   1              AOL2 = 0;
 104   1              BOL1 = 0;
 105   1              BOL2 = 0;
 106   1      }
 107          //////////////////////////////////获取按键函数///////////////////////////////
 108          void GetKey(void)
 109          {
 110   1                               //key用于标准按键状态，每位表示一个按键状态，0表示没按，1表示按下，
 111   1                                                                                               //0到6位分别表示A01到C02的状态
 112   1              if( Key_AIL1==0 )
 113   1              {
 114   2                      delayms(KEY_FRAME_01);
 115   2                      if( Key_AIL1==0 )
 116   2                              key |= 0x01;
C51 COMPILER V9.00   MAIN                                                                  06/29/2014 12:14:01 PAGE 3   

 117   2              }
 118   1              else
 119   1                      key &= ~0x01;
 120   1      
 121   1              if( Key_AIL2==0 )
 122   1              {
 123   2                      delayms(KEY_FRAME_01);
 124   2                      if( Key_AIL2==0 )       
 125   2                              key |= 0x02;
 126   2              }
 127   1              else
 128   1                      key &= ~0x02;
 129   1      
 130   1              if( Key_C01==0 )
 131   1              {
 132   2                      delayms(KEY_FRAME_01);
 133   2                      if( Key_C01==0 )                        
 134   2                              key |= 0x04;
 135   2              }
 136   1              else
 137   1                      key &= ~0x04;
 138   1      
 139   1              if( Key_BIL1==0 )
 140   1              {
 141   2                      delayms(KEY_FRAME_01);
 142   2                      if( Key_BIL1==0 )
 143   2                              key |= 0x08;
 144   2              }
 145   1              else
 146   1                      key &= ~0x08;
 147   1      
 148   1              if( Key_BIL2==0 )
 149   1              {
 150   2                      delayms(KEY_FRAME_01);
 151   2                      if( Key_BIL2==0 )               
 152   2                              key |= 0x10;
 153   2              }
 154   1              else
 155   1                      key &= ~0x10;
 156   1      
 157   1      //      if( Key_C02==0 )
 158   1      //      {
 159   1      //              delayms(KEY_FRAME_01);
 160   1      //              if( Key_C02==0 )                
 161   1      //                      flag_key |= 0x20;
 162   1      //      }
 163   1      //      else
 164   1      //              flag_key &= ~0x20;
 165   1      
 166   1      
 167   1      //      return flag_key;
 168   1      
 169   1      }
 170          //////////////////////////////////中断调用函数//////////////////////////////
 171          /////////////////////////////////用于判断C02是否接上////////////////////////
 172          ////////////////////////有延时判断（拔插卡时间）////////////////////////////
 173          void read_C02(void)
 174          {
 175   1              if( Key_C02==0 )
 176   1              {
 177   2                      Key_time_C02_On ++;
 178   2                      Key_time_C02_Off = 0;
C51 COMPILER V9.00   MAIN                                                                  06/29/2014 12:14:01 PAGE 4   

 179   2                      if( Key_time_C02_On>=(int)(Key_Frame_21*10) )     //判断按制时间是否足够        
 180   2                      {       
 181   3                              key |= 0x20;
 182   3                              Key_time_C02_On =(int)(Key_Frame_21*10);
 183   3                              MOTOR_L1_Runtime_Offse = 0;
 184   3                              welcome_flag = 1;
 185   3                      }
 186   2              }
 187   1              else
 188   1              {
 189   2                      Key_time_C02_Off ++;
 190   2                      Key_time_C02_On = 0;
 191   2                      if( Key_time_C02_Off>=(int)(Key_Frame_22*10) )    //判断不按制时间是否足够
 192   2                      {
 193   3                              key &= ~0x20;
 194   3                              Key_time_C02_Off =(int)(Key_Frame_22*10);
 195   3                              
 196   3                              if((L1_delay_flag==1)&&(welcome_flag==1))
 197   3                              {
 198   4                                      MOTOR_L1_Runtime_Offse =(int)( DELAY_TIME_MOTOR_L1 - MOTOR_L1_Runtime);
 199   4                                      welcome_flag = 0;
 200   4                              }
 201   3                      }
 202   2              }
 203   1      }
 204          //////////////////////////////////执行函数///////////////////////////////////
 205          void run(void)
 206          {
 207   1              if((flag_C02 ==0)&&( (key&0x20)==0x20 ) )                                  //
 208   1              {               
 209   2                      Key_Frame_23_time_flag = 0;
 210   2                      Key_Frame_23_time = 0;
 211   2                      flag_C02 = 1;                           // C02已接上标志
 212   2                      flag_AOL1 = 0;
 213   2                      flag_AOL2 = 0;
 214   2                      flag_BOL1 = 0;
 215   2                      flag_BOL2 = 0;
 216   2                      AOL2=0;
 217   2                      AOL1=1;
 218   2                      BOL2=0;
 219   2                      BOL1=1;
 220   2                      L1_delay_flag = 1;
 221   2                      delay(DELAY_TIME_MOTOR_L1);                //延时180秒
 222   2                      L1_delay_flag = 0;
 223   2                      AOL1=0;
 224   2                      BOL1=0;
 225   2                      
 226   2              }
 227   1              else if((flag_C02 ==1)&&( (key&0x20)==0x20))
 228   1              {
 229   2                      Key_Frame_23_time_flag = 0;
 230   2                      Key_Frame_23_time = 0;
 231   2                      flag_C02 = 1;                           // C02已接上标志
 232   2                      flag_AOL1 = 0;
 233   2                      flag_AOL2 = 0;
 234   2                      flag_BOL1 = 0;
 235   2                      flag_BOL2 = 0;
 236   2      
 237   2                      if( ((key&0x01)==0x01)&&((key&0x02)==0) )                                                //A02接上
 238   2                      {
 239   3                              AOL2 = 0;
 240   3                              AOL1 = 1;
C51 COMPILER V9.00   MAIN                                                                  06/29/2014 12:14:01 PAGE 5   

 241   3                      }
 242   2                      else if ( (key&0x01)==0 )                                        //A02没接上
 243   2                              AOL1 = 0;
 244   2                      else {  AOL1=0; AOL2=0; }
 245   2      
 246   2      
 247   2                      if ( ((key&0x02)==0x02)&&((key&0x01)==0) )                                       //B02接上
 248   2                      {
 249   3                              AOL1 = 0;
 250   3                              AOL2 = 1;
 251   3                      }
 252   2                      else if ( (key&0x02)==0 )                                        //B02没接上
 253   2                              AOL2 = 0;
 254   2      
 255   2                      else {  AOL1=0; AOL2=0; }
 256   2      
 257   2      
 258   2                      if( ((key&0x08)==0x08)&&((key&0x10)==0) )                                                //A02接上
 259   2                      {
 260   3                              BOL2 = 0;
 261   3                              BOL1 = 1;
 262   3                      }
 263   2                      else if ( (key&0x08)==0 )                                        //A02没接上
 264   2                              BOL1 = 0;
 265   2                      else {  BOL1=0; BOL2=0; }
 266   2      
 267   2      
 268   2                      if ( ((key&0x10)==0x10)&&((key&0x08)==0) )                                       //B02接上
 269   2                      {
 270   3                              BOL1 = 0;
 271   3                              BOL2 = 1;
 272   3                      }
 273   2                      else if ( (key&0x10)==0 )                                        //B02没接上
 274   2                              BOL2 = 0;
 275   2      
 276   2                      else {  BOL1=0; BOL2=0; }
 277   2               }
 278   1              else if((flag_C02 ==1)&&(key&0x20)==0 &&(Key_Frame_23_time<=((Key_Frame_23 - MOTOR_L1_Runtime_Offse)>0?(K
             -ey_Frame_23 - MOTOR_L1_Runtime_Offse):0)))
 279   1              {
 280   2                      Key_Frame_23_time_flag = 1;
 281   2                      flag_C02 = 1;                           // C02已接上标志
 282   2                      flag_AOL1 = 0;
 283   2                      flag_AOL2 = 0;
 284   2                      flag_BOL1 = 0;
 285   2                      flag_BOL2 = 0;
 286   2      
 287   2                      if( ((key&0x01)==0x01)&&((key&0x02)==0) )                                                //AIL1接上
 288   2                      {
 289   3                              AOL2 = 0;
 290   3                              AOL1 = 1;
 291   3                      }
 292   2                      else if ( (key&0x01)==0 )                                        //AIL1没接上
 293   2                              AOL1 = 0;
 294   2                      else {  AOL1=0; AOL2=0; }
 295   2      
 296   2      
 297   2                      if ( ((key&0x02)==0x02)&&((key&0x01)==0) )                                       //AIL2接上
 298   2                      {
 299   3                              AOL1 = 0;
 300   3                              AOL2 = 1;
 301   3                      }
C51 COMPILER V9.00   MAIN                                                                  06/29/2014 12:14:01 PAGE 6   

 302   2                      else if ( (key&0x02)==0 )                                        //AIL2没接上
 303   2                              AOL2 = 0;
 304   2      
 305   2                      else {  AOL1=0; AOL2=0; }
 306   2      
 307   2                      if( ((key&0x08)==0x08)&&((key&0x10)==0) )                                                //BIL1接上
 308   2                      {
 309   3                              BOL2 = 0;
 310   3                              BOL1 = 1;
 311   3                      }
 312   2                      else if ( (key&0x08)==0 )                                        //BIL1没接上
 313   2                              BOL1 = 0;
 314   2                      else {  BOL1=0; BOL2=0; }
 315   2      
 316   2                      if ( ((key&0x10)==0x10)&&((key&0x08)==0) )                                       //BIL2接上
 317   2                      {
 318   3                              BOL1 = 0;
 319   3                              BOL2 = 1;
 320   3                      }
 321   2                      else if ( (key&0x10)==0 )                                        //BIL2没接上
 322   2                              BOL2 = 0;
 323   2      
 324   2                      else {  BOL1=0; BOL2=0; }
 325   2      
 326   2              }
 327   1              else if ( (key&0x20)==0 )
 328   1              {
 329   2                      flag_C02 = 0;                           // C02没接上标志
 330   2                      Key_Frame_23_time_flag = 0;
 331   2                      Key_Frame_23_time = 0;
 332   2      //              Key_Frame_21_time = 0;
 333   2                      if((flag_AOL1 == 0 )&&( flag_AOL2 == 0 )&&( flag_BOL1==0 )&&( flag_BOL2==0 )&&( Key_C02 )&&NOBODY_L1_DOW
             -N )                 //A01接上
 334   2                      {
 335   3                              flag_AOL1 = 1;
 336   3                              AOL2 = 0;
 337   3                              AOL1 = 1;
 338   3                              BOL2 = 0;
 339   3                              BOL1 = 1;
 340   3                              //delay(DELAY_TIME_MOTOR_L1 );
 341   3                              L1_runtime = DELAY_TIME_MOTOR_L1;
 342   3              
 343   3                      }
 344   2                      else if ((key&0x01)==0)                                                  //A01没接上
 345   2                      {
 346   3                              flag_AOL1 = 0;
 347   3                              flag_BOL1 = 0;
 348   3      
 349   3                              if( L1_runtime==0 )
 350   3                              {
 351   4                                      AOL1 = 0;
 352   4                                      BOL1 = 0;
 353   4                              }                       
 354   3                      }
 355   2      
 356   2                      else if( flag_AOL1==1 )  
 357   2                      {
 358   3                              if( L1_runtime==0 )
 359   3                              {
 360   4                                      AOL1 = 0;
 361   4                                      BOL1 = 0;
 362   4                              }                       
C51 COMPILER V9.00   MAIN                                                                  06/29/2014 12:14:01 PAGE 7   

 363   3                      }
 364   2                      else ;
 365   2      
 366   2                      if((flag_BOL1 == 0 )&&(flag_BOL2 == 0 )&&( flag_AOL1==0 )&&( flag_AOL2==0 )&&( Key_C02 )&& NOBODY_L2_DOW
             -N )               //B01接上
 367   2                      {
 368   3                              flag_AOL2 = 1;
 369   3                              AOL1 = 0;
 370   3                              AOL2 = 1;
 371   3                              BOL1 = 0;
 372   3                              BOL2 = 1;
 373   3                              //delay(DELAY_TIME_MOTOR_L2 );
 374   3                              L2_runtime = DELAY_TIME_MOTOR_L2;
 375   3                              
 376   3                      }
 377   2                      else if ((key&0x02)==0)                                                   //B01没接上
 378   2                      {
 379   3                              flag_BOL1 = 0;
 380   3                              flag_AOL1 = 0;
 381   3                              if( L2_runtime==0 )
 382   3                              {
 383   4                                      AOL2 = 0;
 384   4                                      BOL2 = 0;
 385   4                              }               
 386   3                      }
 387   2      
 388   2                      else if( flag_AOL2==1 ) 
 389   2                      {
 390   3                              if( L2_runtime==0 )
 391   3                              {
 392   4                                      AOL2 = 0;
 393   4                                      BOL2 = 0;
 394   4                              }       
 395   3                                                      
 396   3                      }
 397   2                      else ;
 398   2              }
 399   1              else;    
 400   1      }
 401          ////////////////////////////////////////芯片初始化//////////////////////////////
 402          void InitCPU(void)
 403          {
 404   1              /*----- Initialize interrupt -------------*/
 405   1          TMOD = 0x22;                // 0010 0010 timer 0 - 8 bit auto reload                
 406   1                                                      // timer 1 - baud rate generator
 407   1      
 408   1              TH1 =TL1 = 0xf3;        //    SMOD = 0      SMOD =1                                             
 409   1                                                      // 0ffh :57600 bps      0fdh :115200 bps                        
 410   1                                                      // 0fdh : 9600 bps      0fdh :19200 bps                         
 411   1                                                      // 0fah : 4800 bps      0fah :9600 bps                                                  
 412   1                                                      // 0f4h : 2400 bps                                                              
 413   1                                                      // 0e8h : 1200 bps      
 414   1      
 415   1                                      
 416   1          TCON = 0x55;                // 0101 0001 timer 0,1 run                                              
 417   1                                                      // int 0,  edge triggered                                               
 418   1                                                      // int 1,  edge triggered                                               
 419   1                                                      // TF1 TR1 TF0 TR0      EI1 IT1 EI0 IT0 
 420   1              
 421   1              SCON = 0x50;            // 0100 0000 mode 1 - 8 bit UART                                
 422   1                                                      // Enable serial reception                      
 423   1      
C51 COMPILER V9.00   MAIN                                                                  06/29/2014 12:14:01 PAGE 8   

 424   1              TH0 = TL0 = 0x03;               // 250us
 425   1      
 426   1              PCON = 0x80;            // 0000 0000 SMOD(double baud rate bit) = 1             
 427   1      
 428   1      
 429   1      
 430   1              IP       = 0x22;                // 0000 0000 interrupt priority                                 
 431   1                                                      // -  - PT2 PS PT1 PX1 PT0 PX0   
 432   1      
 433   1              IE   = 0x92;
 434   1      }
 435          ////////////////////////////////////IO初始化//////////////////////////////////
 436          void InitIO (void)
 437          {
 438   1              P1M0=0x00;
 439   1              P1M1=0x00;
 440   1              P2M0=0x0f;
 441   1              P2M1=0x00;
 442   1              P3M0=0x00;
 443   1              P3M1=0x00;
 444   1              P4M0=0x00;
 445   1              P4M1=0x00;
 446   1              P2 = 0;
 447   1      }
 448          void chek(void)
 449          {
 450   1              if( Key_C02!=0 )
 451   1              {
 452   2                      delayms(10);
 453   2                      if( Key_C02!=0 )
 454   2                      {
 455   3                               flag_C02 = 1;
 456   3                      }
 457   2              }
 458   1      }
 459          /////////////////////////////////main函数//////////////////////////////////////
 460          int  main(void)
 461          {
 462   1              InitCPU();
 463   1              InitIO();
 464   1              Motor_Stop();
 465   1              chek();
 466   1              while(1)
 467   1              {
 468   2                      GetKey();       
 469   2                      run();
 470   2              }
 471   1              return 0;       
 472   1      }
 473          //////////////////////////////////////中断/////////////////////////////////
 474          void timer0_int() interrupt 1
 475          { 
 476   1              cont++;                                      //250us中断
 477   1              if( cont>=4 )
 478   1              {
 479   2                      delay_1ms++;
 480   2                      delay_ms++;
 481   2                      delay_1ms_for_100ms++;
 482   2                      cont = 0;
 483   2              }
 484   1              if(delay_ms>60000)
 485   1                      delay_ms = 0;
C51 COMPILER V9.00   MAIN                                                                  06/29/2014 12:14:01 PAGE 9   

 486   1              if( delay_1ms_for_100ms>=100 )
 487   1              {
 488   2                      delay_1ms_for_100ms = 0;
 489   2                      read_C02();
 490   2                      
 491   2              }
 492   1              if( delay_1ms>= 1000)
 493   1              {
 494   2                      delay_1s ++;
 495   2                      delay_1ms = 0;
 496   2      
 497   2                      if( L1_runtime !=0 )
 498   2                              L1_runtime--;
 499   2      
 500   2                      if( L2_runtime !=0 )
 501   2                              L2_runtime--;
 502   2      
 503   2                      
 504   2      //              if( Key_Frame_21_time_flag==1 )
 505   2      //                      Key_Frame_21_time++;
 506   2                      
 507   2                      if( Key_Frame_23_time_flag==1 )
 508   2                              Key_Frame_23_time++;
 509   2                      
 510   2                      if( L1_delay_flag==1 )
 511   2                      {
 512   3                              MOTOR_L1_Runtime ++;
 513   3                      }
 514   2                      else
 515   2                      {
 516   3                              MOTOR_L1_Runtime = 0;
 517   3                      }
 518   2              }       
 519   1              if( delay_1s> 300 )
 520   1                      delay_1s = 0;                                             //防止自加超出
 521   1                      
 522   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1069    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
